<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
    http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.1.xsd">

    <!-- ====================================================================================== -->
    <!-- shiro Filter Configuration:                                                            -->
    <!--                                                                                        -->
    <!--        loginUrl: 没有登录的用户请求需要认证的资源时（authc）自动跳转到登录页面,不是必须的属性， -->
    <!--                  如果value不输入的话会自动需找项目webapp目录下的login.jsp页面               -->
    <!--      successUrl: 登录成功默认跳转页面, 不配置则跳转至"/"。如果登录前点击的一个需要登录的界面，  -->
    <!--                  则在登录自动跳转到那个需要登录的页面，不跳转到此                            -->
    <!-- unauthorizedUrl: 没有权限默认跳转的页面。请求资源必须经过授权过滤器，比如roles[admin]，而不是  -->
    <!--                  认证过滤器，比如authc                                                   -->
    <!--                                                                                        -->
    <!-- ====================================================================================== -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <property name="loginUrl" value="#{props['cas.loginUrl']}"/>
        <property name="successUrl" value="/auth/index"/>
        <property name="unauthorizedUrl" value="/auth/401"/>

        <property name="filters">
            <map>
                <entry key="perm" value-ref="urlPermFilter"/>
                <entry key="cas" value-ref="casFilter"/>
                <entry key="logout" value-ref="logoutFilter"/>
            </map>
        </property>

        <property name="filterChainDefinitions">
            <value>
                <![CDATA[
                    /favicon.ico = anon
                    /dist/**     = anon

                    /auth/401    = anon
                    /auth/index  = anon
                    /auth/logout = logout

                    /shiro-cas   = cas

                    /            = authc
                    /**          = authc, perm
                ]]>
            </value>
        </property>
    </bean>

    <!-- 配置验证错误时的失败页面 -->
    <bean id="casFilter" class="org.apache.shiro.cas.CasFilter">
        <property name="failureUrl" value="#{props['cas.failureUrl']}"/>
    </bean>

    <!-- 配置注销后的回调页面 -->
    <bean id="logoutFilter" class="org.apache.shiro.web.filter.authc.LogoutFilter">
        <property name="redirectUrl" value="#{props['cas.logoutUrl']}"/>
    </bean>

    <bean id="casAuthRealm" class="com.tzg.web.auth.anonymous.realm.CasAuthRealm">
        <!-- cas服务端地址前缀 -->
        <property name="casServerUrlPrefix" value="#{props['cas.serverUrl']}"/>
        <!-- 应用服务地址，用来接收cas服务端票据 -->
        <property name="casService" value="#{props['cas.clientUrl']}"/>
    </bean>

    <bean id="urlPermFilter" class="com.tzg.web.auth.anonymous.filter.URLPermFilter"/>

    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="subjectFactory" ref="casSubjectFactory"/>
        <property name="realm" ref="casAuthRealm"/>
    </bean>

    <bean id="casSubjectFactory" class="org.apache.shiro.cas.CasSubjectFactory"/>

    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

    <bean id="passwordService" class="org.apache.shiro.authc.credential.DefaultPasswordService"/>

</beans>
